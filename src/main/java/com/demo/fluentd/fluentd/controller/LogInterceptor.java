package com.demo.fluentd.fluentd.controller;

import com.demo.fluentd.fluentd.service.FluentdClient;
import org.slf4j.MDC;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.HandlerInterceptor;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.Map;
import java.util.UUID;

@RestController
public class LogInterceptor implements HandlerInterceptor {
    @Autowired
    private FluentdClient fluentdClient;

    public void LogInterceptor(FluentdClient fluentdClient) {
        this.fluentdClient = fluentdClient;
    }

    @PostMapping(path = "/pre-handle")
    @Override
    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {
        // Capture the log messages generated by the application
        MDC.put("requestId", UUID.randomUUID().toString());
        return true;
    }

    @PostMapping(path = "/postHandle")
    @Override
    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {
        MDC.put("requestId", UUID.randomUUID().toString());
        // Send the captured log messages to Fluentd
        Map<String, String> data = MDC.getCopyOfContextMap();
        if (data != null) {
            fluentdClient.send("myapp", data);
        }
    }

    @PostMapping(path = "/afterCompletion", consumes = "application/json", produces = "application/json")
    @Override
    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {
        // Clear the MDC data
        MDC.clear();
    }
}
